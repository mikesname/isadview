# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

GET     /dbtest                         controllers.Application.dbtest()
GET     /testq                          controllers.Application.testq()
GET     /testsolr                       controllers.Application.testSolr()

# Home page
GET     /home                           controllers.Search.home
GET     /login                          controllers.Application.login
POST    /login                          controllers.Application.loginPost
GET     /logout                         controllers.Application.logout
GET     /openid                         controllers.Application.openIDCallback
GET     /signup                         controllers.Application.signup
POST    /signup                         controllers.Application.signupPost
GET     /signup_complete                controllers.Application.signupComplete
POST    /signup_complete                controllers.Application.signupCompletePost

GET     /profile                        controllers.Users.profile
GET     /profile/edit                   controllers.Users.edit
POST     /profile/edit                  controllers.Users.editPost
GET     /profile/collection/list        controllers.Users.listVirtualCollections

# Virtual Collections
GET     /profile/collection/create      controllers.VirtualCollections.new_
POST    /profile/collection/create      controllers.VirtualCollections.create
GET     /profile/collection/:slug       controllers.VirtualCollections.detail(slug:String)
POST     /profile/stash/:item/:vc       controllers.VirtualCollections.saveItem(item: Long, vc: Long)


# Searching
GET     /$rtype<(collection|repository|authority|search)>     controllers.Search.list(rtype:String, page:Int ?= 0, s:Int ?= 2, q ?= "", field ?= "")
GET     /$rtype<(collection|repository|authority|search)>/facets/:facet    controllers.Search.facets(facet:String, rtype:String, page:Int ?= 0, sort:String ?= "count", q ?= "", field ?= "")

GET     /repository/updateIndex     controllers.Repositories.updateIndex
GET     /repository/edit/:slug      controllers.Repositories.edit(slug: String)
POST    /repository/edit/:slug      controllers.Repositories.save(slug: String)
GET     /repository/create          controllers.Repositories.new_
POST    /repository/create          controllers.Repositories.create
GET     /repository/delete/:slug    controllers.Repositories.confirmDelete(slug: String)
POST    /repository/delete/:slug    controllers.Repositories.delete(slug: String)
GET     /repository/:slug           controllers.Repositories.detail(slug:String)

GET     /authority/updateIndex      controllers.Authorities.updateIndex
GET     /authority/edit/:slug       controllers.Authorities.edit(slug: String)
POST    /authority/edit/:slug       controllers.Authorities.save(slug: String)
GET     /authority/delete/:slug     controllers.Authorities.confirmDelete(slug: String)
POST    /authority/delete/:slug     controllers.Authorities.delete(slug: String)
GET     /authority/create           controllers.Authorities.new_
POST    /authority/create           controllers.Authorities.create
GET     /authority/:slug            controllers.Authorities.detail(slug:String)

GET     /collection/updateIndex     controllers.Collections.updateIndex
GET     /collection/edit/:slug      controllers.Collections.edit(slug: String)
POST    /collection/edit/:slug      controllers.Collections.save(slug: String)
GET     /collection/delete/:slug    controllers.Collections.confirmDelete(slug: String)
POST    /collection/delete/:slug    controllers.Collections.delete(slug: String)
GET     /collection/create          controllers.Collections.new_
POST    /collection/create          controllers.Collections.create
GET     /collection/:slug           controllers.Collections.detail(slug:String)

# Map static resources from the /public folder to the /assets URL path
GET     /assets/*file               controllers.Assets.at(path="/public", file)
